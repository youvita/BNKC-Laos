/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/
ext.deps = [:]
def versions = [:]
versions.gradle = "4.1.3"
versions.activity = "1.0.0"
versions.fragment = "1.3.2"
versions.hilt = "2.33-beta"
versions.core_ktx = "1.3.2"
versions.appcompat = "1.2.0"
versions.material = "1.3.0"
versions.constraintlayout = "2.0.4"
versions.kotlin = "1.4.31"
versions.dagger = "2.33-beta"
versions.retrofit = "2.6.2"
versions.okhttp = "4.2.2"
versions.coroutines = "1.3.0"
versions.lifecycle = "2.2.0-rc03"
versions.rxjava2 = "2.2.7"
versions.paging = "2.1.2"
versions.room = "2.3.0"
versions.crypto = "1.1.0-alpha01"
versions.glide = "4.11.0"
ext.versions = versions

def dagger = [:]
dagger.android  = "com.google.dagger:hilt-android:$versions.dagger"
dagger.compiler = "com.google.dagger:hilt-compiler:$versions.dagger"
deps.dagger = dagger

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.converter_gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
deps.retrofit = retrofit

def okhttp = [:]
okhttp.okhttp3_interceptor = "com.squareup.okhttp3:logging-interceptor:$versions.okhttp"
okhttp.okhttp3 = "com.squareup.okhttp3:okhttp:$versions.okhttp"
deps.okhttp = okhttp

def coroutine = [:]
coroutine.core = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"
coroutine.android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
deps.coroutine = coroutine

def kotlin = [:]
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib:$versions.kotlin"
deps.kotlin = kotlin

def lifecycle = [:]
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
lifecycle.viewmodel_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
lifecycle.livedata_ktx = "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle"
deps.lifecycle = lifecycle

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
room.room_ktx = "androidx.room:room-ktx:$versions.room"
deps.room = room

def support = [:]
support.activity_ktx = "androidx.activity:activity-ktx:$versions.activity"
support.fragment_ktx = "androidx.fragment:fragment-ktx:$versions.fragment"
deps.support = support

def security = [:]
security.crypto = "androidx.security:security-crypto:$versions.crypto"
deps.security = security

deps.gradle = "com.android.tools.build:gradle:$versions.gradle"
deps.hilt_android_gradle_plugin = "com.google.dagger:hilt-android-gradle-plugin:$versions.hilt"
deps.core_ktx = "androidx.core:core-ktx:$versions.core_ktx"
deps.appcompat = "androidx.appcompat:appcompat:$versions.appcompat"
deps.material = "com.google.android.material:material:$versions.material"
deps.constraintlayout = "androidx.constraintlayout:constraintlayout:$versions.constraintlayout"
deps.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
deps.paging_ktx = "androidx.paging:paging-runtime-ktx:$versions.paging"
deps.glide = "com.github.bumptech.glide:glide:$versions.glide"

ext.deps = deps

def build_versions = [:]
build_versions.min_sdk = 21
build_versions.target_sdk = 30
build_versions.build_tools = "30.0.3"
ext.build_versions = build_versions

static def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
}

ext.addRepos = this.&addRepos
